//
// Created by Ghala Buarish on 7/22/25.
//

#include "hlshelp.h"
void spmv(DTYPE data_in[TOTAL], DTYPE y[SIZE]) {
	int rowPtr[NUM_ROWS +1];
	int columnIndex[NNZ];
	DTYPE values[NNZ];
	DTYPE x[SIZE];

	int currIndex = 0;

	for (int i=0; i<NUM_ROWS+1; i++) {
		rowPtr[i] = (int)data_in[currIndex];
		currIndex++;
	};
	for (int i = 0; i < NNZ; i++){
		columnIndex[i] = (int)data_in[currIndex];
		currIndex++;
	}

	for (int i = 0; i < NNZ; i++) {
		values[i] = data_in[currIndex];
		currIndex++;
	}

	for (int i = 0; i < SIZE; i++) {
		x[i] = data_in[currIndex];
		currIndex++;
	}
	
	L1: for (int i = 0; i < NUM_ROWS; i++) {
#pragma HLS PIPELINE off
		DTYPE y0 = 0;
		L2: for (int k = rowPtr[i]; k < rowPtr[i+1]; k++) {
#pragma HLS PIPELINE off

			y0 += values[k] * x[columnIndex[k]];
		}
		y[i] = y0;
	}
}


//
// Created by Ghala Buarish on 7/22/25.
//
#include "hlshelp.h"
#include <stdio.h>
void matrixvector(DTYPE A[SIZE][SIZE], DTYPE * y, DTYPE * x)
{
	for (int i = 0; i < SIZE; i++) {
		DTYPE y0 = 0;
		for (int j = 0; j < SIZE; j++)
			y0 += A[i][j] * x[j];
		y[i] = y0;
	}
}



	DTYPE data_in[TOTAL] = {0,2,4,7,9,0,1,1,2,0,2,3,1,3,3,4,5,9,2,3,1,4,6,1,2,3,4};






