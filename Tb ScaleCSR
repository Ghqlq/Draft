#include "CSR_baseline.h"
#include <stdio.h>
#include <iostream>
#include <stdlib.h>

void generate_csr_input(int *row_ptr, int *col_index, DTYPE *values, DTYPE *x, DTYPE *full_input) {
    int nnz = 0;
    srand(42);

    row_ptr[0] = 0;
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE && nnz < NNZ; j++) {
            // Force nnz entries across the matrix
            col_index[nnz] = j;
            values[nnz] = rand() % 10 + 1; // int between 1 and 10
            nnz++;
        }
        row_ptr[i + 1] = nnz;
        if (nnz >= NNZ) break;
    }

    // Fill remaining nnz if needed
    while (nnz < NNZ) {
        col_index[nnz] = rand() % SIZE;
        values[nnz] = rand() % 10 + 1;
        nnz++;
    }

    // Input vector x
    for (int i = 0; i < SIZE; i++) {
        x[i] = rand() % 10 + 1;
    }

    // Fill full_input
    int full_idx = 0;
    for (int i = 0; i <= SIZE; i++) full_input[full_idx++] = row_ptr[i];
    for (int i = 0; i < NNZ; i++) full_input[full_idx++] = col_index[i];
    for (int i = 0; i < NNZ; i++) full_input[full_idx++] = values[i];
    for (int i = 0; i < SIZE; i++) full_input[full_idx++] = x[i];
}

int main() {
    int row_ptr[SIZE + 1];
    int col_index[NNZ];
    DTYPE values[NNZ];
    DTYPE x[SIZE];
    DTYPE full_input[TOTAL];

    generate_csr_input(row_ptr, col_index, values, x, full_input);

    hls::stream<DTYPE> in_fifo;
    hls::stream<DTYPE> out_fifo;

    for (int i = 0; i < TOTAL; i++) {
        in_fifo.write(full_input[i]);
    }

    spmv(in_fifo, out_fifo);

    for (int i = 0; i < SIZE; i++) {
        std::cout << out_fifo.read() << " ";
    }
    std::cout << std::endl;

    return 0;
}



// FILE: CSR_baseline.h
#ifndef CSR_BASELINE_H
#define CSR_BASELINE_H

#include <hls_stream.h>
#include <ap_axi_sdata.h>

#define SIZE 256
const static int NUM_ROWS = SIZE;
#define DENSITY 0.01
#define NNZ (int)(SIZE * SIZE * DENSITY) // Fixed number of non-zeros
#define TOTAL (SIZE + 1 + NNZ * 2 + SIZE) // row_ptr + col_index + values + x

typedef int DTYPE;

void spmv(hls::stream<DTYPE> &in_fifo, hls::stream<DTYPE> &out_fifo);

#endif // CSR_BASELINE_H
